<?php

namespace Purmeo\EshopBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ComponentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ComponentRepository extends EntityRepository {

    public function checkToComponent($data) {
        $res = array();

        if (
                $data->getGrain()
                && $data->getSalad()
                && $data->getMilk()
                && $data->getFastfood()
                && $data->getMeat()
        ) {
            $calc_cluster_1 = true;
        } else {
            $calc_cluster_1 = false;
        }

        if (
                $data->getDrink()
                && $data->getFish()
                && $data->getOil()
        ) {
            $calc_cluster_2 = true;
        } else {
            $calc_cluster_2 = false;
        }

        if (
                $data->getFruit()
                && $data->getSweets()
        ) {
            $calc_cluster_3 = true;
        } else {
            $calc_cluster_3 = false;
        }

        if (
                $data->getSmoker()
                && $data->getDiet()
                && $data->getSport()
        ) {
            $calc_cluster_4 = true;
        } else {
            $calc_cluster_4 = false;
        }

        if (
                $data->getDream()
                && $data->getStress()
        ) {
            $calc_cluster_5 = true;
        } else {
            $calc_cluster_5 = false;
        }

        if ($data->getPregnant()) {
            $calc_cluster_6 = true;
        } else {
            $calc_cluster_6 = false;
        }
        if (
                $data->getStress()
                && $data->getFish()
                && $data->getOil()
        ) {
            $calc_cluster_7 = true;
        } else {
            $calc_cluster_7 = false;
        }

        $cluster_1 = 0;
        if ($calc_cluster_1) {
            if ($data->getGrain() == 3) {
                $cluster_1 = $cluster_1 + 1;
            } elseif ($data->getGrain() == 1) {
                $cluster_1 = $cluster_1 + 2;
            }
            if ($data->getSalad() == 3) {
                $cluster_1 = $cluster_1 + 1;
            } elseif ($data->getSalad() == 2) {
                $cluster_1 = $cluster_1 + 2;
            }
            if ($data->getMilk() == 2) {
                $cluster_1 = $cluster_1 + 1.33;
            } elseif ($data->getMilk() == 3) {
                $cluster_1 = $cluster_1 + 0.66;
            }
            if ($data->getFastfood() == 1) {
                $cluster_1 = $cluster_1 + 2;
            } elseif ($data->getFastfood() == 3) {
                $cluster_1 = $cluster_1 + 1;
            }
            if ($data->getMeat() == 3) {
                $cluster_1 = $cluster_1 + 1;
            } elseif ($data->getMeat() == 2) {
                $cluster_1 = $cluster_1 + 2;
            }
        }
        if ($cluster_1 == 0) {
            $res[1] = 0;
        } elseif ($cluster_1 > 0 and $cluster_1 <= 1.33) {
            $res[1] = 1;
        } elseif ($cluster_1 > 1.33 and $cluster_1 <= 2.66) {
            $res[1] = 2;
        } elseif ($cluster_1 > 2.66 and $cluster_1 <= 4) {
            $res[1] = 3;
        } elseif ($cluster_1 > 4 and $cluster_1 <= 5.33) {
            $res[1] = 4;
        } elseif ($cluster_1 > 5.33 and $cluster_1 <= 6.66) {
            $res[1] = 5;
        } elseif ($cluster_1 > 6.66 and $cluster_1 <= 8) {
            $res[1] = 6;
        } elseif ($cluster_1 > 8 and $cluster_1 <= 9.33) {
            $res[1] = 7;
        }

        if ($res[1] > 0) {
            $gender = $data->getGender();
            $hight = $data->getHeight() / 100;
            $weight = $data->getWeight();
            $bday = $data->getDay();
            $bmonth = $data->getMonth();
            $byear = $data->getYear();
            $alter = $this->alter($bday, $bmonth, $byear);
            $bmi = ($weight / ($hight * $hight));

            if ($gender == 2) {
                $res[1] = $res[1] - 1;
            }
            if ($bmi <= 19) {
                $res[1] = $res[1] - 1;
            }

            if ($alter > 50) {
                $res[1] = $res[1] + 1;
            }
            if ($bmi >= 25) {
                $res[1] = $res[1] + 1;
            }
        }

        if ($res[1] > 7) {
            $res[1] = 7;
        }
        if ($res[1] < 0) {
            $res[1] = 0;
        }

        if ($calc_cluster_2) {
            $a = 0;
            $b = 0;
            $c = 0;
            if ($data->getDrink() == 1) {
                $a = 1;
            }
            if ($data->getFish() == 2) {
                $b = 1;
            }
            if ($data->getOil() == 2) {
                $c = 1;
            }
            $user = $this->ar_int2text(array($a, $b, $c));
            if (count(array_diff($user, $this->ar_int2text(array(0, 0, 0)))) === 0) {
                $res[2] = 0;
            } elseif (count(array_diff($user, $this->ar_int2text(array(1, 0, 0)))) === 0) {
                $res[2] = 8;
            } elseif (count(array_diff($user, $this->ar_int2text(array(0, 1, 0)))) === 0) {
                $res[2] = 9;
            } elseif (count(array_diff($user, $this->ar_int2text(array(0, 0, 1)))) === 0) {
                $res[2] = 10;
            } elseif (count(array_diff($user, $this->ar_int2text(array(1, 1, 0)))) === 0) {
                $res[2] = 11;
            } elseif (count(array_diff($user, $this->ar_int2text(array(1, 0, 1)))) === 0) {
                $res[2] = 12;
            } elseif (count(array_diff($user, $this->ar_int2text(array(0, 1, 1)))) === 0) {
                $res[2] = 13;
            } elseif (count(array_diff($user, $this->ar_int2text(array(1, 1, 1)))) === 0) {
                $res[2] = 14;
            }
        } else {
            $res[2] = 0;
        }

        $a = 0;
        $b = 0;
        if ($calc_cluster_3) {
            if ($data->getFruit() == 2) {
                $a = 2;
            } elseif ($data->getFruit() == 3) {
                $a = 1;
            }
            if ($data->getSweets() == 2) {
                $b = 1;
            }
        }
        if ($a == 0 and $b == 0) {
            $res[3] = 0;
        } elseif ($a == 0 and $b == 1) {
            $res[3] = 15;
        } elseif ($a == 2 and $b == 1) {
            $res[3] = 16;
        } elseif ($a == 1 and $b == 1) {
            $res[3] = 17;
        } elseif ($a == 1 and $b == 0) {
            $res[3] = 18;
        } elseif ($a == 2 and $b == 0) {
            $res[3] = 19;
        }

        $smok = 0;
        $b = 0;
        if ($calc_cluster_4) {
            if ($data->getSmoker() == 1) {
                $smok = 1;
            }
            if ($data->getDiet() == 1) {
                $b = $b + 1;
            }
            if ($data->getSport() == 1) {
                $b = $b + 1;
            }
            if ($data->getSport() == 3) {
                $b = $b + 2;
            }
            if ($smok) {
                if ($b == 0) {
                    $res[4] = 23;
                } elseif ($b == 1) {
                    $res[4] = 24;
                } elseif ($b == 2) {
                    $res[4] = 25;
                } elseif ($b == 3) {
                    $res[4] = 26;
                }
            } else {
                if ($b == 0) {
                    $res[4] = 0;
                } elseif ($b == 1) {
                    $res[4] = 20;
                } elseif ($b == 2) {
                    $res[4] = 21;
                } elseif ($b == 3) {
                    $res[4] = 22;
                }
            }
        } else {
            $res[4] = 0;
        }

        $a = 0;
        $b = 0;
        if ($calc_cluster_5) {
            if ($data->getDream() == 2) {
                $a = 2;
            } elseif ($data->getDream() == 3) {
                $a = 1;
            }
            if ($data->getStress() == 1) {
                $b = 1;
            }
        }
        if ($a == 0 and $b == 0) {
            $res[5] = 0;
        } elseif ($a == 2 and $b == 0) {
            $res[5] = 27;
        } elseif ($a == 1 and $b == 0) {
            $res[5] = 28;
        } elseif ($a == 0 and $b == 1) {
            $res[5] = 29;
        } elseif ($a == 1 and $b == 1) {
            $res[5] = 30;
        } elseif ($a == 2 and $b == 1) {
            $res[5] = 31;
        }

        if ($calc_cluster_6) {
            if ($data->getPregnant() == 1) {
                $res[6] = 32;
            } elseif ($data->getPregnant() == 3) {
                $res[6] = 33;
            } else {
                $res[6] = 0;
            }
        } else {
            $res[6] = 0;
        }

        $a = 0;
        $b = 0;
        $c = 0;
        if ($calc_cluster_7) {
            if ($data->getStress() == 1) {
                $a = 1;
            }
            if ($data->getFish() == 2) {
                $b = 1;
            }
            if ($data->getOil() == 2) {
                $c = 1;
            }
        }
        if ($a == 0 and $b == 1 and $c == 1) {
            $res[7] = 35;
        } elseif ($a == 1 and $b == 1 and $c == 0) {
            $res[7] = 35;
        } elseif ($a == 1 and $b == 1 and $c == 1) {
            $res[7] = 35;
        } else {
            $res[7] = 0;
        }

        return $res;
    }

    protected function alter($tag, $mon, $jah) {
        $gebur = mktime(0, 0, 0, $mon, $tag, $jah);
        $alter = floor((date("Ymd") - date("Ymd", $gebur)) / 10000);
        return $alter;
    }

    protected function ar_int2text($ar_int) {
        $res = array("na", "nb", "nc");
        if ($ar_int[0])
            $res[0] = "a";
        if ($ar_int[1])
            $res[1] = "b";
        if ($ar_int[2])
            $res[2] = "c";
        return $res;
    }

    public function createComponentsXML($order, $controller) {
        return $controller->render('PurmeoEshopBundle:Component:sendComponents.xml.twig', array(
                    'order' => $order
                ));
    }

    public function addComponentsToOrder($componentsList, $order, $em) {

        foreach ($componentsList as $componentCode) {
            if ($componentCode > 0) {
                $component = $this->findOneByCode($componentCode);
                $order->addComponent($component);
                $em->persist($order);
                $em->flush();
            }
        }
    }

}
